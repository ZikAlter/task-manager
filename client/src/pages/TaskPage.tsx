import { FC, useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { TaskService } from "../services/task.service";
import { ITask } from "../types/task.interface";
import dateFormat from "dateformat";
import { toast } from "react-toastify";
import { RiFileDownloadLine } from "react-icons/ri";

const TaskPage: FC = () => {
    const { id } = useParams();
    const [task, setTask] = useState<ITask | null>(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        if (id) {
            loadTask();
        }
    }, [id]);

    const loadTask = async () => {
        try {
            const data = await TaskService.getOne(Number(id));
            setTask(data);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞—á–∏:', error);
            toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏');
        } finally {
            setLoading(false);
        }
    };

    if (loading) {
        return (
            <div className="flex justify-center items-center h-screen">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
            </div>
        );
    }

    if (!task) {
        return (
            <div className="flex justify-center items-center h-screen">
                <h1 className="text-2xl text-red-600">–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
            </div>
        );
    }

    return (
        <div className="container px-4 md:px-0">
            <h1 className="mt-4 mb-4 text-2xl md:text-4xl font-bold text-blue-600">–ó–∞–¥–∞—á–∞ ‚Ññ{task.id}</h1>
            <div className="w-full shadow-xl rounded-2xl bg-white p-4 md:p-8 m-0 md:m-4 text-gray-500">
                <h2 className="mt-2 mb-2 text-lg md:text-2xl font-bold text-blue-600 break-words">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: {task.titleTask}</h2>
                <div className="flex flex-col sm:flex-row gap-2 sm:gap-3 mb-3">
                    <button
                        className="text-white py-2 md:py-1 px-3 text-sm md:text-base bg-blue-600 rounded-md shadow-lg shadow-blue-400/80 hover:bg-blue-700">
                        –ó–∞–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É
                    </button>
                    <button
                        className="text-white py-2 md:py-1 px-3 text-sm md:text-base bg-blue-600 rounded-md shadow-lg shadow-blue-400/80 hover:bg-blue-700">
                        –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É
                    </button>
                </div>
                <div className="flex flex-col lg:flex-row gap-4 lg:gap-0">
                    <div className="w-full lg:basis-1/2">
                        <p className="text-sm md:text-base mb-2">–°—Ç–∞—Ç—É—Å: <span className="font-bold">{task.result}</span></p>
                        <p className="text-sm md:text-base mb-2">–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫: <span className="font-bold">{dateFormat(task.endedAt, "dd.mm.yyyy HH:MM")}</span></p>
                        <p className="text-sm md:text-base mb-2">–°—Ç–µ–ø–µ–Ω—å —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á–∏: <span className={`font-bold ${task.importance === '–°—Ä–æ—á–Ω–æ' ? 'text-rose-600' : task.importance === '–°—Ä–µ–¥–Ω—è—è' ? 'text-orange-600' : ''}`}>
                    {task.importance === '–°—Ä–æ—á–Ω–æ' ? 'üî• ' : ''}{task.importance}
                </span></p>
                    </div>
                    <div className="w-full lg:basis-1/2">
                        <p className="font-bold text-sm md:text-base mb-2">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</p>
                        <p className="text-sm md:text-base mb-1">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {dateFormat(task.createdAt, "dd.mm.yyyy HH:MM")}</p>
                        <p className="text-sm md:text-base mb-1 break-words">–ê–≤—Ç–æ—Ä –∑–∞–¥–∞—á–∏: {`${task.user.surname} ${task.user.firstName} ${task.user.patronymic}`}</p>
                        <p className="text-sm md:text-base mb-1 break-words">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {`${task.contractor.surname} ${task.contractor.firstName} ${task.contractor.patronymic}`}</p>
                    </div>
                </div>
                <p className="font-bold text-sm md:text-base mt-4 mb-2">–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:</p>
                <p className="text-sm md:text-base break-words">{task.descript}</p>
            </div>
            <h2 className="mt-4 mb-4 text-xl md:text-3xl font-bold text-blue-600 ml-0 md:ml-4">–û–±—Å—É–∂–¥–µ–Ω–∏–µ</h2>
            <div className="w-full shadow-xl rounded-2xl bg-white p-4 md:p-8 m-0 md:m-4 text-gray-500">
                <h2 className="mt-2 mb-2 text-lg md:text-xl font-bold text-blue-600 break-words">–°–∏–¥–æ—Ä–æ–≤ –ü–µ—Ç—Ä –ê—Ä–∫–∞–¥—å–µ–≤–∏—á (–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å)</h2>
                <p className="text-sm md:text-base mb-3 break-words">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Modi, nemo, quas. Ex facere ipsam iure modi praesentium quas quod! A ab corporis dolorem fuga ipsa itaque obcaecati praesentium quisquam soluta.</p>
                <p className="font-bold text-sm md:text-base mb-2">–í–ª–æ–∂–µ–Ω–∏–µ:</p>
                <a href="/–ø—É—Ç—å/–∫/—Ñ–∞–π–ª—É.pdf" download="–Ω–æ–≤–æ–µ_–∏–º—è.pdf" className="inline-block mb-2">
                    <RiFileDownloadLine size={32} className="md:w-10 md:h-10" />
                </a>
                <p className="font-bold text-xs md:text-sm">20.07.2023 15:00</p>
            </div>
            <form className="flex flex-col w-full max-w-[600px] lg:w-[600px] h-fit shadow-xl rounded-2xl bg-white m-0 md:m-4 p-4 md:p-8 mt-6 md:mt-8 mx-auto lg:mx-0">
                <h2 className="block font-bold text-blue-600 text-lg md:text-2xl mb-3">–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ</h2>
                <textarea
                    name="description"
                    id="description"
                    cols={20}
                    rows={5}
                    className="mt-0 md:mt-3 py-3 shadow-md border-2 rounded-xl pl-2 bg-gray-50 outline-blue-500 text-sm md:text-base resize-none"
                    placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
                />
                <input
                    type="file"
                    className="mt-3 py-2 md:py-3 shadow-md border-2 rounded-xl pl-2 bg-gray-50 outline-blue-500 text-sm md:text-base"
                    id="input"
                    multiple
                />
                <button
                    type="submit"
                    className="text-white py-3 md:py-4 px-1 bg-green-600 rounded-2xl shadow-lg shadow-green-400/80 hover:bg-green-700 mt-4 md:mt-6 text-sm md:text-base">
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                </button>
            </form>
        </div>
    );
};

export default TaskPage;